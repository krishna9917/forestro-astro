plugins {
  id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties');
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}


def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}
android {
    namespace "com.foreastro.astrologer"
    compileSdk 35
    ndkVersion flutter.ndkVersion

    lintOptions {
        checkReleaseBuilds false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.foreastro.astrologer"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 34
        targetSdkVersion 35
        versionCode 31
        versionName "1.0.1"
        multiDexEnabled true
    }


// signingConfigs {
//     release {
//         keyAlias keystoreProperties['keyAlias']
//         keyPassword keystoreProperties['keyPassword']
//         storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
//         storePassword keystoreProperties['storePassword']
//     }
// }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

// configurations.all {
//     resolutionStrategy {
//         force 'com.github.carda:AndroidAwnCore:0.9.3'  // Correct group ID
//     }
// }
dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'  // ✅ AndroidX
    implementation 'com.google.firebase:firebase-messaging:23.4.0'  // ✅ Latest
    implementation 'com.android.support:multidex:2.0.1'  // Required for multidex
}