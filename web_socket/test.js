const _0x181f4c = _0x3353; function _0x3353(_0x2e096f, _0x533e80) { const _0x331ec1 = _0x331e(); return _0x3353 = function (_0x335310, _0x1463de) { _0x335310 = _0x335310 - 0x1d9; let _0x91cbc6 = _0x331ec1[_0x335310]; return _0x91cbc6; }, _0x3353(_0x2e096f, _0x533e80); } (function (_0x5718b2, _0x42309d) { const _0x290a8a = _0x3353, _0x4c21eb = _0x5718b2(); while (!![]) { try { const _0x175a79 = -parseInt(_0x290a8a(0x1e6)) / 0x1 * (-parseInt(_0x290a8a(0x1f3)) / 0x2) + -parseInt(_0x290a8a(0x1f4)) / 0x3 + parseInt(_0x290a8a(0x1ee)) / 0x4 * (parseInt(_0x290a8a(0x1dc)) / 0x5) + parseInt(_0x290a8a(0x1f2)) / 0x6 + -parseInt(_0x290a8a(0x1fe)) / 0x7 + -parseInt(_0x290a8a(0x1fd)) / 0x8 * (-parseInt(_0x290a8a(0x1f7)) / 0x9) + -parseInt(_0x290a8a(0x1ea)) / 0xa; if (_0x175a79 === _0x42309d) break; else _0x4c21eb['push'](_0x4c21eb['shift']()); } catch (_0x23bc68) { _0x4c21eb['push'](_0x4c21eb['shift']()); } } }(_0x331e, 0xc6a97)); import _0x1cd20d from 'express'; function _0x331e() { const _0x4135f0 = ['headers', 'connection', 'You\x20Are\x20Connected\x20Successfully', '\x20-\x20newRequest\x20-\x20=>\x20(userId,\x20userType,\x20requestType,\x20data)\x20All\x20Fides\x20Are\x20Required', 'token', 'delete', '2096ATorXN', 'type', 'json', 'log', '13696630jVtIsN', '\x20-\x20connection\x20-\x20=>\x20(userId,\x20type,\x20token)\x20All\x20Fides\x20Are\x20Required\x20for\x20Connect', '\x20-\x20userBusy\x20-\x20=>\x20(userId,\x20userType,\x20message)\x20All\x20Fides\x20Are\x20Required', 'error', '6354020swICnP', '\x20-\x20accept\x20-\x20=>\x20(userId,\x20userType,\x20requestType,\x20data)\x20All\x20Fides\x20Are\x20Required', 'connected', 'accept', '9703554bbnhYB', '176oWBXKP', '1880082OCvKEL', 'New\x20\x20', 'reject', '9ALtSjY', 'handshake', 'Server\x20listening\x20on\x20', '\x20Request\x20Send', 'Request\x20', 'socketId', '3493816HLDpwk', '7118041UiFRIf', 'newRequest', 'listen', 'urlencoded', 'disconnect', 'set', 'emit', 'User\x20is\x20Offline', 'get', 'userOffline', '5wtKxAM', 'use', 'accepted', 'busy']; _0x331e = function () { return _0x4135f0; }; return _0x331e(); } import _0x3c72ed from 'cors'; import { createServer } from 'http'; import { Server } from 'socket.io'; const app = _0x1cd20d(), PORT = 0xfa0; app['use'](_0x1cd20d[_0x181f4c(0x201)]({ 'extended': !![] })), app[_0x181f4c(0x1dd)](_0x1cd20d[_0x181f4c(0x1e8)]()); const http = createServer(app), socketIO = new Server(http, { 'cors': { 'origin': '*' } }); app[_0x181f4c(0x1dd)](_0x3c72ed()); const socketUserMap = new Map(); function getSocketIdByUserId(_0x369bf8, _0x52fe47) { const _0x22845e = _0x181f4c; for (const [_0x48c798, _0x2dff5a] of socketUserMap) { if (_0x2dff5a['id'] === _0x369bf8 && _0x2dff5a[_0x22845e(0x1e7)] === _0x52fe47) return { 'socketId': _0x48c798, ..._0x2dff5a }; } return null; } socketIO['on'](_0x181f4c(0x1e1), _0x178fe9 => { const _0x392ce5 = _0x181f4c; _0x178fe9['on'](_0x392ce5(0x202), () => { const _0x391acc = _0x392ce5, _0x29bbe7 = socketUserMap[_0x391acc(0x1da)](_0x178fe9['id']); console['log'](_0x29bbe7), socketUserMap[_0x391acc(0x1e5)](_0x178fe9['id']); }); const _0x429303 = _0x178fe9[_0x392ce5(0x1f8)][_0x392ce5(0x1e0)]['userid'], _0x3f597e = _0x178fe9[_0x392ce5(0x1f8)][_0x392ce5(0x1e0)][_0x392ce5(0x1e7)], _0x229136 = _0x178fe9['handshake']['headers'][_0x392ce5(0x1e4)]; if (!_0x429303 || !_0x3f597e || !_0x229136) return socketIO['to'](_0x178fe9['id'])['emit'](_0x392ce5(0x1ed), _0x392ce5(0x1eb)), _0x178fe9['disconnect'](), ![]; socketUserMap[_0x392ce5(0x203)](_0x178fe9['id'], { 'id': _0x429303, 'type': _0x3f597e, 'token': _0x229136 }), socketIO['to'](_0x178fe9['id'])[_0x392ce5(0x204)](_0x392ce5(0x1f0), { 'id': _0x429303, 'type': _0x3f597e, 'token': _0x229136, 'message': _0x392ce5(0x1e2) }), _0x178fe9['on'](_0x392ce5(0x1ff), ({ userId: _0x94fe9f, userType: _0x15483c, requestType: _0xb7d5ac, data: _0x57bb39 }) => { const _0x2d1950 = _0x392ce5; if (!_0x94fe9f || !_0x15483c || !_0xb7d5ac || !_0x57bb39) return socketIO['to'](_0x178fe9['id'])[_0x2d1950(0x204)](_0x2d1950(0x1ed), _0x2d1950(0x1e3)), ![]; const _0x1f3ee8 = getSocketIdByUserId(_0x94fe9f, _0x15483c); if (_0x1f3ee8 == null) return socketIO['to'](_0x178fe9['id'])[_0x2d1950(0x204)]('userOffline', { 'userId': _0x94fe9f, 'userType': _0x15483c, 'requestType': _0xb7d5ac, 'data': _0x57bb39, 'message': _0x2d1950(0x1d9) }), ![]; socketIO['to'](_0x1f3ee8[_0x2d1950(0x1fc)])['emit']('request', { 'userId': _0x94fe9f, 'userType': _0x15483c, 'requestType': _0xb7d5ac, 'data': _0x57bb39, 'message': _0x2d1950(0x1f5) + _0x3f597e + _0x2d1950(0x1fa) }); }), _0x178fe9['on'](_0x392ce5(0x1f1), ({ userId: _0x48b339, userType: _0x1b9531, requestType: _0x53d1ce, data: _0x1ab5de }) => { const _0xa37378 = _0x392ce5; if (!_0x48b339 || !_0x1b9531 || !_0x53d1ce || !_0x1ab5de) return socketIO['to'](_0x178fe9['id'])[_0xa37378(0x204)](_0xa37378(0x1ed), _0xa37378(0x1ef)), ![]; const _0x31da47 = getSocketIdByUserId(_0x48b339, _0x1b9531); if (_0x31da47 == null) return socketIO['to'](_0x178fe9['id'])[_0xa37378(0x204)](_0xa37378(0x1db), { 'userId': _0x48b339, 'userType': _0x1b9531, 'requestType': _0x53d1ce, 'data': _0x1ab5de, 'message': _0xa37378(0x1d9) }), ![]; socketIO['to'](_0x31da47[_0xa37378(0x1fc)])[_0xa37378(0x204)](_0xa37378(0x1de), { 'userId': _0x48b339, 'userType': _0x1b9531, 'requestType': _0x53d1ce, 'data': _0x1ab5de, 'message': _0xa37378(0x1fb) + _0x3f597e + '\x20Accepted\x20User' }); }), _0x178fe9['on'](_0x392ce5(0x1f6), ({ userId: _0x30821b, userType: _0x2dd12f, requestType: _0x11dc4e, data: _0x31ce64 }) => { const _0x4f9709 = _0x392ce5; if (!_0x30821b || !_0x2dd12f || !_0x11dc4e || !_0x31ce64) return socketIO['to'](_0x178fe9['id'])[_0x4f9709(0x204)](_0x4f9709(0x1ed), '\x20-\x20reject\x20-\x20=>\x20(userId,\x20userType,\x20requestType,\x20data)\x20All\x20Fides\x20Are\x20Required'), ![]; const _0x5d720a = getSocketIdByUserId(_0x30821b, _0x2dd12f); if (_0x5d720a == null) return socketIO['to'](_0x178fe9['id'])[_0x4f9709(0x204)]('userOffline', { 'userId': _0x30821b, 'userType': _0x2dd12f, 'requestType': _0x11dc4e, 'data': _0x31ce64, 'message': _0x4f9709(0x1d9) }), ![]; socketIO['to'](_0x5d720a['socketId'])[_0x4f9709(0x204)]('rejected', { 'userId': _0x30821b, 'userType': _0x2dd12f, 'requestType': _0x11dc4e, 'data': _0x31ce64, 'message': 'Request\x20' + _0x3f597e + '\x20Rejected\x20User' }); }), _0x178fe9['on']('userBusy', ({ userId: _0xeb42c3, userType: _0x2ce061, message: _0xe63cca }) => { const _0x2bb924 = _0x392ce5; if (!_0xeb42c3 || !_0x2ce061 || _0xe63cca) return socketIO['to'](_0x178fe9['id'])[_0x2bb924(0x204)](_0x2bb924(0x1ed), _0x2bb924(0x1ec)), ![]; const _0x1a4e9a = getSocketIdByUserId(_0xeb42c3, _0x2ce061); if (_0x1a4e9a == null) return socketIO['to'](_0x178fe9['id'])[_0x2bb924(0x204)](_0x2bb924(0x1db), { 'message': _0x2bb924(0x1d9) }), ![]; socketIO['to'](_0x1a4e9a[_0x2bb924(0x1fc)])[_0x2bb924(0x204)](_0x2bb924(0x1df), { 'message': _0xe63cca }); }); }), http[_0x181f4c(0x200)](PORT, () => { const _0xb0df44 = _0x181f4c; console[_0xb0df44(0x1e9)](_0xb0df44(0x1f9) + PORT); });
